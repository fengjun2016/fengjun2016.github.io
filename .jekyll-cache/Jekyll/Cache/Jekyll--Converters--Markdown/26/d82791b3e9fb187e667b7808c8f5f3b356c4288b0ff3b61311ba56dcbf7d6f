I"d<h2 id="前言">前言</h2>

<blockquote>
  <p>公司最近需要新上一个业务，在秒杀的同时，还需要实时统计已经秒杀的订单量?所以这里做一下技术分析和技术总结</p>
</blockquote>

<h2 id="现有技术背景扫盲">现有技术背景扫盲</h2>

<h3 id="qps">QPS</h3>

<p>即<strong><code class="language-plaintext highlighter-rouge">Queries Per Second</code></strong>的缩写，每秒能处理查询数目。 是一台服务器每秒能够相应的查询次数，是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准。`</p>

<h3 id="12306抢票分析">12306抢票分析</h3>

<blockquote>
  <p>每到节假日期间，一二线城市返乡、外出游玩的人们几乎都会面临着一个问题: 抢购火车票！虽然现在大多数情况下都能订到火车票，但是放票瞬间即无票的场景，相信大家都深有体会。尤其是春节期间，大家不仅使用<code class="language-plaintext highlighter-rouge">12306</code>，还会考虑”智行”和其他的抢票软件，全国上下几亿人都在这段时间抢票。”12306”承受着这个世界上任何秒杀系统都无法超越的<strong>QPS</strong>, 上百万的并发再正常不过了！</p>
</blockquote>

<blockquote>
  <p>笔者专门研究了一下”12306”的服务端架构，学习到了其系统设计上的很多亮点，在这里和大家分享一下并模拟一个例子: 如何在100万人同时抢一万张火车票时，系统提供正常、稳定的服务。</p>
</blockquote>

<h4 id="1大型高并发系统架构">1.大型高并发系统架构</h4>

<p>高并发的系统架构都会采用分布式集群部署，服务上层有着层层负载均衡，并提供各种容灾手段(双火机房、节点容错、服务器灾备)保证系统的高可用，流量也会根据不同的负载能力和配置策略均衡到不同的服务器上。下面是一个简单的示意图:</p>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ggcu80t26pj30ny0mxwj3.jpg" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xcode-select --install
</code></pre></div></div>

<p><img src="https://upload-images.jianshu.io/upload_images/545662-f9031dfcce085f8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/459" alt="" /></p>

<h2 id="xcode版本切换">Xcode版本切换</h2>

<h3 id="显示当前使用的xocde版本">显示当前使用的xocde版本</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ xcode-select --print-path
</code></pre></div></div>

<h3 id="选择xcode中的默认版本">选择Xcode中的默认版本</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ sudo xcode-select -switch /Applications/Xcode.app
</code></pre></div></div>
:ET