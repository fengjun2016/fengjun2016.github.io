I"<h2 id="前言">前言</h2>

<p>如何自定义配置容器的主机名和DNS呢?秘诀就是Docker利用虚拟文件来挂载容器的3个相关配置文件。</p>

<p>在容器中使用 <code class="language-plaintext highlighter-rouge">mount</code> 命令可以看到挂载信息:</p>

<p>这种机制可以让宿主主机DNS信息发生更新后, 所有<code class="language-plaintext highlighter-rouge">Docker</code>容器的<code class="language-plaintext highlighter-rouge">DNS</code>配置通过
<code class="language-plaintext highlighter-rouge">/etc/resolv.conf</code>文件立刻得到更新。</p>

<p>配置全部容器的DNS，也可以在 <code class="language-plaintext highlighter-rouge">/etc/docker/daemon.json</code>文件中增加以下内容来设置。</p>

<p>这样每次启动的容器DNS自动配置为<code class="language-plaintext highlighter-rouge">114.114.114.114</code> 和 <code class="language-plaintext highlighter-rouge">8.8.8.8</code>。 使用以下命令证明其已经生效。</p>

<p>如果用户想要手动指定容器的配置，可以在使用<code class="language-plaintext highlighter-rouge">docker run</code> 命令启动容器时加入如下参数:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">-h HOSTNAME</code> 或者 <code class="language-plaintext highlighter-rouge">--hostname=HOSTNAME</code> 设定容器的主机名, 它会被写到容器内的<code class="language-plaintext highlighter-rouge">/etc/hostname</code> 和 <code class="language-plaintext highlighter-rouge">/etc/hosts</code>。但是它在容器外部看不到，既不会在 <code class="language-plaintext highlighter-rouge">docker container ls</code>中显示, 也不会在其他容器的<code class="language-plaintext highlighter-rouge">/etc/hosts</code> 看到。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">--dns=IP_ADDRESS</code> 添加DNS服务器大盘容器的<code class="language-plaintext highlighter-rouge">/etc/resolve.conf</code>中，让容器用这个服务器来解析所有不在<code class="language-plaintext highlighter-rouge">/etc/hosts</code>中的主机名。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">--dns-search=DOMAIN</code> 设定容器的搜索域，当设定搜索域为 <code class="language-plaintext highlighter-rouge">.example.com</code>时，在搜索一个名为host的主机时, DNS不仅搜索host, 还会搜索<code class="language-plaintext highlighter-rouge">host.example.com</code>。</p>
  </li>
</ul>

<h2 id="新建网络">新建网络</h2>

<p>下面先创建一个新的 <code class="language-plaintext highlighter-rouge">Docker</code> 网络。</p>

<p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gib9qo1hgpj31z40bcwgg.jpg" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">-d</code> 参数指定Docker网络类型, 有 <code class="language-plaintext highlighter-rouge">bridge</code>, <code class="language-plaintext highlighter-rouge">overlay</code>。其中 <code class="language-plaintext highlighter-rouge">overlay</code>网络类型用于 <code class="language-plaintext highlighter-rouge">Swarm mode</code>, 在本小节中你可以忽略它。</p>

<h2 id="连接容器">连接容器</h2>
<p>运行一个容器并连接到新建的 <code class="language-plaintext highlighter-rouge">my-net</code> 网络
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1giba5cgjzwj31z40bctav.jpg" alt="" /></p>

<p>打开新的终端，再运行一个容器并加入到 <code class="language-plaintext highlighter-rouge">my-net</code>网络
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gibhnjdrqvj31z40bc0uw.jpg" alt="" /></p>

<p>再打开一个新的终端查看容器信息
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gibi2wp71pj31z40fcwig.jpg" alt="" /></p>

<p>下面 <code class="language-plaintext highlighter-rouge">ping</code> 来证明<code class="language-plaintext highlighter-rouge">busybox1</code> 容器 和 <code class="language-plaintext highlighter-rouge">busybox2</code>容器建立了互联关系。
在 <code class="language-plaintext highlighter-rouge">busybox1</code>容器输入以下命令
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gibieew11fj31z40mc105.jpg" alt="" /></p>

<p>用 ping 来测试连接 <code class="language-plaintext highlighter-rouge">busybox2</code> 容器，它会解析成 <code class="language-plaintext highlighter-rouge">172.21.0.2</code>。</p>

<p>同理在 <code class="language-plaintext highlighter-rouge">busybox2</code> 容器执行 <code class="language-plaintext highlighter-rouge">ping busybox1</code>，也会成功连接到。
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gibids2xepj31z40lcwle.jpg" alt="" /></p>

<p>可以使用ip:hostPort:containerPort 格式指定映射使用一个特定地址，比如localhost地址可以使用127.0.0.1
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gib5sjqy28j318s0bc40a.jpg" alt="" /></p>

<p>这样, <code class="language-plaintext highlighter-rouge">busybox1</code> 容器和 <code class="language-plaintext highlighter-rouge">busybox2</code> 容器建立了互联关系。</p>

<h2 id="docker-compose">Docker Compose</h2>

<p>如果你有多个容器之间需要互相连接, 推荐使用 <code class="language-plaintext highlighter-rouge">Docker Compose</code>。</p>
:ET