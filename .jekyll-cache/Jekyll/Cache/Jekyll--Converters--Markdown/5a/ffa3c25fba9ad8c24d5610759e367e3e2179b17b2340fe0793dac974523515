I"K<h2 id="前言">前言</h2>

<p>容器中可以运行一些网络应用，要让外部也可以访问到这些应用，可以通过-P或-p参数类指定端口映射。
当时<code class="language-plaintext highlighter-rouge">-p</code>标记时,Docker会随机映射一个端口到内部容器开放的网络端口。</p>

<p>使用<code class="language-plaintext highlighter-rouge">docker container ls</code>可以看到，本地主机的32768被映射到了容器的80端口。此时访问本机的32768端口即可访问容器内的<code class="language-plaintext highlighter-rouge">nginx</code>默认页面。
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gib5emrqd0j31z40icwiv.jpg" alt="" /></p>

<p>同样的, 可以通过<code class="language-plaintext highlighter-rouge">docker logs</code> 命令来查看访问记录。
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gib5gbnhp3j31z40dc77m.jpg" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">-p</code> 则可以指定要映射的端口, 并且，在一个指定端口只可以绑定一个容器。支持的格式有
<code class="language-plaintext highlighter-rouge">ip:hostPort:containerPort | ip:containerPort | hostPort:containerPort</code>。</p>

<h2 id="隐射所有接口地址">隐射所有接口地址</h2>
<p>使用<code class="language-plaintext highlighter-rouge">hostPort:containerPort</code>格式本地的80端口映射到容器的80端口,可以执行:
<img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gib5m2nexaj31z40bcdhu.jpg" alt="" />
此时默认会绑定本地所有接口上的所有地址。</p>
:ET